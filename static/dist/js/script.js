"use strict";function _typeof(n){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}!function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=e,o.c=t,o.d=function(n,r,e){o.o(n,r)||Object.defineProperty(n,r,{enumerable:!0,get:e})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(r,n){if(1&n&&(r=o(r)),8&n)return r;if(4&n&&"object"===_typeof(r)&&r&&r.__esModule)return r;var e=Object.create(null);if(o.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:r}),2&n&&"string"!=typeof r)for(var t in r)o.d(e,t,function(n){return r[n]}.bind(null,t));return e},o.n=function(n){var r=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(r,"a",r),r},o.o=function(n,r){return Object.prototype.hasOwnProperty.call(n,r)},o.p="",o(o.s="./src/static/js/script.js")}({"./src/static/js/script.js":function srcStaticJsScriptJs(module,exports){eval('\r\nwindow.onload = function(){\r\n\r\n    // /***************** Sticky NAVBAR ****************************************/\r\n    // The purpose of this function is to set the menu during user navigation.\r\n    window.onscroll = function() {myFunction()};\r\n    // code supposed to run once DOM is loaded\r\n    let navbar = document.getElementById("header-menu");\r\n    console.log(navbar);\r\n\r\n    // Get the offset position of the navbar\r\n    let sticky = navbar.offsetTop;\r\n\r\n    // Add the sticky class to the navbar when you reach its scroll position. Remove "sticky" when you leave the scroll position\r\n    function myFunction() {\r\n        if (window.pageYOffset >= sticky) {\r\n            navbar.classList.add("sticky")\r\n        } else {\r\n            navbar.classList.remove("sticky");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n// /********************** IMAGE SLIDE +++++++++++++++++++++++++++++++++++/\r\n    function installEventHandler(selector, type, eventHandler)\r\n    {\r\n        let domObject;\r\n\r\n        // Retrieving the first DOM object corresponding to the selector.\r\n        domObject = document.querySelector(selector);\r\n\r\n        // Installation of an event handler on this DOM object.\r\n        domObject.addEventListener(type, eventHandler);\r\n    }\r\n\r\n    let slideIndex = 1;\r\n    showSlides(slideIndex);\r\n\r\n    function plusSlides(n) {\r\n        showSlides(slideIndex += n);\r\n    }\r\n\r\n    function next() {\r\n        plusSlides(1);\r\n    }\r\n\r\n    function prev() {\r\n        plusSlides(-1);\r\n    }\r\n\r\n    function autoSlides() {\r\n        plusSlides(1);\r\n    }\r\n\r\n    function currentSlide(n) {\r\n        showSlides(slideIndex = n);\r\n    }\r\n\r\n    setInterval(autoSlides,8000);\r\n\r\n    function showSlides(n) {\r\n        let i;\r\n        let slides = document.getElementsByClassName("slide");\r\n\r\n        if (n > slides.length) {slideIndex = 1}\r\n        if (n < 1) {slideIndex = slides.length}\r\n        for (i = 0; i < slides.length; i++) {\r\n            slides[i].style.display = "none";\r\n        }\r\n\r\n        slides[slideIndex-1].style.display = "block";\r\n    }\r\n\r\n    // Installation of event managers.\r\n    installEventHandler(\'.prev\', \'click\', prev );\r\n    installEventHandler(\'.next\', \'click\', next );\r\n\r\n\r\n\r\n\r\n    // /***************************** PARALLAX EFFECT ********************************/\r\n    let winScrollTop=0;\r\n\r\n    $.fn.is_on_screen = function(){\r\n        let win = $(window);\r\n        let viewport = {\r\n            top : win.scrollTop(),\r\n            left : win.scrollLeft()\r\n        };\r\n\r\n        viewport.bottom = viewport.top + win.height();\r\n\r\n        let bounds = this.offset();\r\n\r\n        bounds.bottom = bounds.top + this.outerHeight();\r\n\r\n        return (!(viewport.bottom < bounds.top || viewport.top > bounds.bottom));\r\n    };\r\n\r\n    function parallax() {\r\n        let scrolled = $(window).scrollTop();\r\n        $(\'.parallax-section\').each(function(){\r\n\r\n            if ($(this).is_on_screen()) {\r\n                let firstTop = $(this).offset().top;\r\n                let $span = $(this).find("span");\r\n                let moveTop = (firstTop-winScrollTop)*0.1 //speed;\r\n                $span.css("transform","translateY("+-moveTop+"px)");\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    $(window).scroll(function(e){\r\n        winScrollTop = $(this).scrollTop();\r\n        parallax();\r\n    });\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./src/static/js/script.js?')}});
//# sourceMappingURL=script.js.map
